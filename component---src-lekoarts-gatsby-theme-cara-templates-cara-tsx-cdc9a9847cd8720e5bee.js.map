{"version":3,"file":"component---src-lekoarts-gatsby-theme-cara-templates-cara-tsx-cdc9a9847cd8720e5bee.js","mappings":"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","sources":["webpack://cara/./src/@lekoarts/gatsby-theme-cara/sections/intro.mdx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/components/hero.tsx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/sections/projects.mdx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/components/projects.tsx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/sections/about.mdx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/components/about.tsx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/components/footer.tsx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/sections/contact.mdx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/components/contact.tsx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/templates/cara.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Hi, I'm Nazila`}</h2>\n    <p>{`I design and develop immersive digital experiences.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Divider from \"../elements/divider\"\nimport Inner from \"../elements/inner\"\nimport Content from \"../elements/content\"\nimport Svg from \"./svg\"\nimport { UpDown, UpDownWide } from \"../styles/animations\"\n// @ts-ignore\nimport Intro from \"../sections/intro\"\n\nconst Hero = ({ offset, factor = 1 }: { offset: number; factor?: number }) => (\n  <div>\n    <Divider speed={0.2} offset={offset} factor={factor}>\n      {/* <UpDown>\n        <Svg icon=\"triangle\" hiddenMobile width={48} stroke color=\"icon_orange\" left=\"10%\" top=\"20%\" />\n        <Svg icon=\"hexa\" width={48} stroke color=\"icon_red\" left=\"60%\" top=\"70%\" />\n        <Svg icon=\"box\" width={6} color=\"icon_darker\" left=\"60%\" top=\"15%\" />\n      </UpDown>\n      <UpDownWide>\n        <Svg icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_blue\" left=\"80%\" top=\"10%\" />\n        <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"50%\" />\n        <Svg icon=\"circle\" width={16} color=\"icon_darker\" left=\"70%\" top=\"90%\" />\n        <Svg icon=\"triangle\" width={16} stroke color=\"icon_darkest\" left=\"30%\" top=\"65%\" />\n        <Svg icon=\"cross\" width={16} stroke color=\"icon_pink\" left=\"28%\" top=\"15%\" />\n        <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"75%\" top=\"10%\" />\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" />\n      </UpDownWide>\n      <Svg icon=\"circle\" hiddenMobile width={24} color=\"icon_darker\" left=\"5%\" top=\"70%\" />\n      <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"4%\" top=\"20%\" />\n      <Svg icon=\"circle\" width={12} color=\"icon_darkest\" left=\"50%\" top=\"60%\" />\n      <Svg icon=\"upDown\" width={8} color=\"icon_darkest\" left=\"95%\" top=\"90%\" />\n      <Svg icon=\"upDown\" hiddenMobile width={24} color=\"icon_darker\" left=\"40%\" top=\"80%\" />\n      <Svg icon=\"triangle\" width={8} stroke color=\"icon_darker\" left=\"25%\" top=\"5%\" />\n      <Svg icon=\"circle\" width={64} color=\"icon_green\" left=\"95%\" top=\"5%\" />\n      <Svg icon=\"box\" hiddenMobile width={64} color=\"icon_purple\" left=\"5%\" top=\"90%\" />\n      <Svg icon=\"box\" width={6} color=\"icon_darkest\" left=\"10%\" top=\"10%\" />\n      <Svg icon=\"box\" width={12} color=\"icon_darkest\" left=\"40%\" top=\"30%\" />\n      <Svg icon=\"hexa\" width={16} stroke color=\"icon_darker\" left=\"10%\" top=\"50%\" />\n      <Svg icon=\"hexa\" width={8} stroke color=\"icon_darker\" left=\"80%\" top=\"70%\" /> */}\n    </Divider>\n    <Content sx={{ variant: `texts.bigger` }} speed={0.4} offset={offset} factor={factor}>\n      <Inner className=\"main-banner\">\n\n        <div style={{display:\"grid\", gridTemplateColumns: \"1fr 1fr\"}}>\n          <div><Intro /></div>\n          <div><img src=\"/banner-2.png\" style={{maxWidth: \"100%\"}}></img></div>\n        </div>\n        \n      </Inner>\n    </Content>\n  </div>\n)\n\nexport default Hero\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ProjectCard = makeShortcode(\"ProjectCard\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Projects`}</h2>\n    <ProjectCard title=\"Nazila First Project\" link=\"https://github.com/nazilakhaledian\" bg=\"linear-gradient(to right, #D4145A 0%, #FBB03B 100%)\" mdxType=\"ProjectCard\">\n  My first project. UX research, design, blah blah blah\n    </ProjectCard>\n    <ProjectCard title=\"My second project\" link=\"https://github.com/nazilakhaledian\" bg=\"linear-gradient(to right, #662D8C 0%, #ED1E79 100%)\" mdxType=\"ProjectCard\">\n  My second project. UX research, design, blah blah blah\n    </ProjectCard>\n    <ProjectCard title=\"Adding a Draft Feature to Gatsby\" link=\"https://github.com/nazilakhaledian\" bg=\"linear-gradient(to right, #009245 0%, #FCEE21 100%)\" mdxType=\"ProjectCard\">\n  My third project. UX research, design, blah blah blah\n    </ProjectCard>\n    <ProjectCard title=\"Another Project\" link=\"https://github.com/nazilakhaledian\" bg=\"linear-gradient(to right, #D585FF 0%, #00FFEE 100%)\" mdxType=\"ProjectCard\">\n    My fourth project. UX research, design, blah blah blah\n    </ProjectCard>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Divider from \"../elements/divider\"\nimport Inner from \"../elements/inner\"\nimport Content from \"../elements/content\"\nimport Svg from \"./svg\"\nimport { UpDown, UpDownWide } from \"../styles/animations\"\n// @ts-ignore\nimport ProjectsMDX from \"../sections/projects\"\n\nconst Projects = ({ offset, factor = 2 }: { offset: number; factor?: number }) => (\n  <div>\n    <Divider\n      bg=\"linear-gradient(to right, SlateBlue 0%, DeepSkyBlue 100%)\"\n      sx={{ clipPath: `polygon(0 15%, 100% 25%, 100% 85%, 0 75%)` }}\n      speed={-0.2}\n      offset={1.1}\n      factor={factor}\n    />\n    <Content speed={0.4} offset={offset + 0.2} factor={factor}>\n      <Inner>\n        <div\n          sx={{\n            display: `grid`,\n            gridGap: [4, 4, 4, 5],\n            gridTemplateColumns: [`1fr`, `1fr`, `repeat(2, 1fr)`],\n            h2: { gridColumn: `-1/1`, color: `white !important` },\n          }}\n        >\n          <ProjectsMDX />\n        </div>\n      </Inner>\n    </Content>\n    <Divider speed={0.1} offset={offset} factor={factor}>\n      <UpDown>\n        <Svg icon=\"box\" width={6} color=\"icon_brightest\" left=\"85%\" top=\"75%\" />\n        <Svg icon=\"upDown\" width={8} color=\"icon_teal\" left=\"70%\" top=\"20%\" />\n        <Svg icon=\"triangle\" width={8} stroke color=\"icon_orange\" left=\"25%\" top=\"5%\" />\n        <Svg icon=\"circle\" hiddenMobile width={24} color=\"icon_brightest\" left=\"17%\" top=\"60%\" />\n      </UpDown>\n      <UpDownWide>\n        <Svg icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_green\" left=\"20%\" top=\"90%\" />\n        <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"30%\" />\n        <Svg icon=\"circle\" width={16} color=\"icon_yellow\" left=\"70%\" top=\"90%\" />\n        <Svg icon=\"triangle\" hiddenMobile width={16} stroke color=\"icon_teal\" left=\"18%\" top=\"75%\" />\n        <Svg icon=\"circle\" width={6} color=\"icon_brightest\" left=\"75%\" top=\"10%\" />\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_green\" left=\"45%\" top=\"10%\" />\n      </UpDownWide>\n      <Svg icon=\"circle\" hiddenMobile width={6} color=\"icon_brightest\" left=\"4%\" top=\"20%\" />\n      <Svg icon=\"circle\" width={12} color=\"icon_pink\" left=\"80%\" top=\"60%\" />\n      <Svg icon=\"box\" width={6} color=\"icon_orange\" left=\"10%\" top=\"10%\" />\n      <Svg icon=\"box\" width={12} color=\"icon_yellow\" left=\"29%\" top=\"26%\" />\n      <Svg icon=\"hexa\" width={16} stroke color=\"icon_red\" left=\"75%\" top=\"30%\" />\n      <Svg icon=\"hexa\" width={8} stroke color=\"icon_yellow\" left=\"80%\" top=\"70%\" />\n    </Divider>\n  </div>\n)\n\nexport default Projects\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`About`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Some paragraphs about my work, interests, etc goes here.`}</p>\n    </blockquote>\n    <p>{`Some more text here ...`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport Divider from \"../elements/divider\"\nimport Inner from \"../elements/inner\"\nimport Content from \"../elements/content\"\nimport Svg from \"./svg\"\nimport { UpDown, UpDownWide } from \"../styles/animations\"\n// @ts-ignore\nimport AboutMDX from \"../sections/about\"\n\nconst About = ({ offset, factor = 1 }: { offset: number; factor?: number }) => (\n  <div>\n    <Divider\n      bg=\"divider\"\n      clipPath=\"polygon(0 16%, 100% 4%, 100% 82%, 0 94%)\"\n      speed={0.2}\n      offset={offset}\n      factor={factor}\n    />\n    <Divider speed={0.1} offset={offset} factor={factor}>\n      <UpDown>\n        <Svg icon=\"box\" hiddenMobile width={6} color=\"icon_blue\" left=\"50%\" top=\"75%\" />\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"70%\" top=\"20%\" />\n        <Svg icon=\"triangle\" width={8} stroke color=\"icon_darkest\" left=\"25%\" top=\"5%\" />\n        <Svg icon=\"upDown\" hiddenMobile width={24} color=\"icon_orange\" left=\"80%\" top=\"80%\" />\n      </UpDown>\n      <UpDownWide>\n        <Svg icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_purple\" left=\"5%\" top=\"80%\" />\n        <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"95%\" top=\"50%\" />\n        <Svg icon=\"circle\" hiddenMobile width={6} color=\"icon_brightest\" left=\"85%\" top=\"15%\" />\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" />\n      </UpDownWide>\n      <Svg icon=\"circle\" hiddenMobile width={6} color=\"icon_brightest\" left=\"4%\" top=\"20%\" />\n      <Svg icon=\"circle\" width={12} color=\"icon_darkest\" left=\"70%\" top=\"60%\" />\n      <Svg icon=\"box\" width={6} color=\"icon_orange\" left=\"10%\" top=\"10%\" />\n      <Svg icon=\"box\" width={12} color=\"icon_darkest\" left=\"20%\" top=\"30%\" />\n      <Svg icon=\"hexa\" width={8} stroke color=\"icon_darkest\" left=\"80%\" top=\"70%\" />\n    </Divider>\n    <Content speed={0.4} offset={offset} factor={factor}>\n      <Inner>\n        <AboutMDX />\n      </Inner>\n    </Content>\n  </div>\n)\n\nexport default About\n","/** @jsx jsx */\nimport { Box, Flex, Link, useColorMode, jsx } from \"theme-ui\"\n\nconst Footer = () => {\n  const [colorMode, setColorMode] = useColorMode()\n  const isDark = colorMode === `dark`\n  const toggleColorMode = (e: any) => {\n    setColorMode(isDark ? `light` : `dark`)\n  }\n\n  return (\n    <Box as=\"footer\" variant=\"footer\">\n      <button\n        sx={{ variant: `buttons.toggle`, fontWeight: `semibold`, display: `block`, mx: `auto`, mb: 3 }}\n        onClick={toggleColorMode}\n        type=\"button\"\n        aria-label=\"Toggle dark mode\"\n      >\n        {isDark ? `Light` : `Dark`}\n      </button>\n      Copyright &copy; {new Date().getFullYear()}. All rights reserved.\n      <br />\n      <Flex\n        sx={{\n          justifyContent: `center`,\n          alignItems: `center`,\n          mt: 3,\n          color: `text`,\n          fontWeight: `semibold`,\n          a: { color: `text` },\n        }}\n      >\n        {isDark ? (\n          <img width=\"30\" height=\"30\" src=\"https://img.lekoarts.de/gatsby/logo_v2-light_w30.png\" alt=\"LekoArts Logo\" />\n        ) : (\n          <img width=\"30\" height=\"30\" src=\"https://img.lekoarts.de/gatsby/logo_v2_w30.png\" alt=\"LekoArts Logo\" />\n        )}\n        {` `}\n        <Link\n          aria-label=\"Link to the theme's GitHub repository\"\n          sx={{ ml: 2 }}\n          href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-cara\"\n        >\n          Theme\n        </Link>\n        <div sx={{ mx: 1 }}>by</div>\n        {` `}\n        <Link\n          aria-label=\"Link to the theme author's website\"\n          href=\"https://www.lekoarts.de?utm_source=cara&utm_medium=Theme\"\n        >\n          LekoArts\n        </Link>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default Footer\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Get in touch`}</h2>\n    <p>{`Email me at `}<a parentName=\"p\" {...{\n        \"href\": \"mailto:nazilaashkan@gmail.com\"\n      }}>{`nazilaashkan@gmail.com`}</a>{`\nOr, Call me at ...`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Divider from \"../elements/divider\"\nimport Inner from \"../elements/inner\"\nimport Content from \"../elements/content\"\nimport Svg from \"./svg\"\nimport { UpDown, UpDownWide, waveAnimation } from \"../styles/animations\"\nimport Footer from \"./footer\"\n// @ts-ignore\nimport ContactMDX from \"../sections/contact\"\n\nconst Contact = ({ offset, factor = 1 }: { offset: number; factor?: number }) => (\n  <div>\n    <Divider fill=\"divider\" speed={0.2} offset={offset} factor={factor}>\n      <div sx={{ position: `absolute`, bottom: 0, width: `full`, transform: `matrix(1, 0, 0, -1, 0, 0)` }}>\n        <div\n          sx={{\n            position: `relative`,\n            height: `full`,\n            svg: { width: `100%`, height: `40vh` },\n            path: { animation: waveAnimation(`20s`) },\n          }}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"contact-wave\" viewBox=\"0 0 800 338.05\" preserveAspectRatio=\"none\">\n            <path>\n              <animate\n                attributeName=\"d\"\n                values=\"M 0 100 Q 250 50 400 200 Q 550 350 800 300 L 800 0 L 0 0 L 0 100 Z;M 0 100 Q 200 150 400 200 Q 600 250 800 300 L 800 0 L 0 0 L 0 100 Z;M 0 100 Q 150 350 400 200 Q 650 50 800 300 L 800 0 L 0 0 L 0 100 Z\"\n                repeatCount=\"indefinite\"\n                dur=\"30s\"\n              />\n            </path>\n          </svg>\n        </div>\n      </div>\n    </Divider>\n    <Content speed={0.4} offset={offset} factor={factor}>\n      <Inner>\n        <ContactMDX />\n      </Inner>\n      <Footer />\n    </Content>\n    <Divider speed={0.1} offset={offset} factor={factor}>\n      <UpDown>\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"70%\" top=\"20%\" />\n        <Svg icon=\"triangle\" width={8} stroke color=\"icon_darkest\" left=\"25%\" top=\"5%\" />\n      </UpDown>\n      <UpDownWide>\n        <Svg icon=\"triangle\" width={12} stroke color=\"icon_darkest\" left=\"95%\" top=\"50%\" />\n        <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"85%\" top=\"15%\" />\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" />\n      </UpDownWide>\n      <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"4%\" top=\"20%\" />\n      <Svg icon=\"circle\" width={12} color=\"icon_darkest\" left=\"70%\" top=\"60%\" />\n      <Svg icon=\"box\" width={12} color=\"icon_darkest\" left=\"20%\" top=\"30%\" />\n      <Svg icon=\"hexa\" width={8} stroke color=\"icon_darkest\" left=\"80%\" top=\"70%\" />\n    </Divider>\n  </div>\n)\n\nexport default Contact\n","import * as React from \"react\"\nimport { Parallax } from \"@react-spring/parallax\"\nimport Layout from \"../components/layout\"\nimport Hero from \"../components/hero\"\nimport Projects from \"../components/projects\"\nimport About from \"../components/about\"\nimport Contact from \"../components/contact\"\n\nconst Cara = () => (\n  <Layout>\n    <Parallax pages={5}>\n      <Hero offset={0} factor={1} />\n      <Projects offset={1} factor={2} />\n      <About offset={3} factor={1} />\n      <Contact offset={4} factor={1} />\n    </Parallax>\n  </Layout>\n)\n\nexport default Cara\n"],"names":["layoutProps","_frontmatter","MDXContent","components","props","mdxType","isMDXComponent","name","offset","factor","speed","sx","variant","className","style","display","gridTemplateColumns","src","maxWidth","ProjectCard","console","warn","title","link","bg","clipPath","gridGap","h2","gridColumn","color","icon","width","left","top","stroke","hiddenMobile","parentName","useColorMode","colorMode","setColorMode","isDark","as","fontWeight","mx","mb","onClick","e","type","Date","justifyContent","alignItems","mt","a","height","alt","ml","href","fill","position","bottom","transform","svg","path","animation","waveAnimation","xmlns","id","viewBox","preserveAspectRatio","attributeName","values","repeatCount","dur","pages"],"sourceRoot":""}